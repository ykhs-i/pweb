<!DOCTYPE html>

<html lang="ja">

<head>

	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

	<title>ダイアグラム</title>

	<style>
		html {
			font-size: 3.3vw;
		}

		* {
			margin: 0;
			padding: 0;
			box-sizing: border-box;
		}

		body {
			min-height: 100vh;
			width: 100%;
			background-color: #FDFEFE;
			font-family: "ヒラギノ丸ゴシック", "Helvetica Neue", Arial, sans-serif;
			user-select: none;
			touch-action: pan-y;
			overflow-y: scroll;
			-ms-overflow-style: none;
			scrollbar-width: none;
		}

		body::-webkit-scrollbar {
			display: none;
		}

		.content {
			cursor: pointer;
			position: relative;
			margin: 0;
		}

		.base_img {
			display: block;
			position: relative;
			margin: 0 auto;
			width: 100%;
			max-height: 100vh;
			object-fit: contain;
			top: 0;
			transition: transform 0.5s ease, transform-origin 0s ease;
		}

		.note_p {
			position: absolute;
			display: block;
			margin: 0;
			padding: 0.1rem;
			bottom: 3.0rem;
			right: 10%;
			font-size: 0.6rem;
			font-weight: bold;
			color:red;
			white-space: nowrap;
			opacity: 0.8;
			z-index: 1100;
		}

	</style>

</head>

<body>

	<div class="content">
		<img class="base_img" src='nodegram.png' alt="拡大対象の画像">
		<p class="note_p"> タップ  ➡ 拡大</p>
		<p class="note_p" style="bottom: 2.0rem">スライド ➡ 保持</p>
		<p class="note_p" style="bottom: 1.0rem">リリース ➡ 縮小</p>
	</div>

<script>

	const image = document.querySelector('.base_img');
	let isZoomed = false;

	image.addEventListener('click', (event) => {
		isZoomed = !isZoomed;
		image.style.transform = isZoomed ? 'scale(3)' : 'scale(1)';
		if (isZoomed) {
			const rect = image.getBoundingClientRect();
			const offsetX = event.clientX - rect.left;
			const offsetY = event.clientY - rect.top;
			image.style.transformOrigin = `${offsetX}px ${offsetY}px`;
		}
	});

	image.addEventListener('touchstart', (event) => {
		const touch = event.touches[0];
		const rect = image.getBoundingClientRect();
		const offsetX = touch.clientX - rect.left;
		const offsetY = touch.clientY - rect.top;
  
		isZoomed = !isZoomed;
		image.style.transform = isZoomed ? 'scale(3)' : 'scale(1)';
		if (isZoomed) {
			image.style.transformOrigin = `${offsetX}px ${offsetY}px`;
		}
  
		event.preventDefault();
	});

	image.addEventListener('touchend', () => {
		isZoomed = !isZoomed;
		image.style.transform = isZoomed ? 'scale(3)' : 'scale(1)';
		if (isZoomed) {
			const rect = image.getBoundingClientRect();
			const offsetX = event.clientX - rect.left;
			const offsetY = event.clientY - rect.top;
			image.style.transformOrigin = `${offsetX}px ${offsetY}px`;
		}
	});

</script>

</body>

</html>
